name: npm-publish
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version of dummy package to test"
        required: true
        default: "1.0.0"

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  # Skipping actual publish for testing
  # publish:
  #   environment: "Publish to NPM"
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: "22"
  #         registry-url: "https://registry.npmjs.org"
  #     - name: Update npm
  #       run: npm install -g npm@latest
  #     - run: npm ci
  #     - run: npm test
  #     - run: npm run build
  #     - run: npm publish

  update-example-post-release:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.event.inputs.version }}
      BRANCH_NAME: post-release/update-example
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22"
          registry-url: "https://registry.npmjs.org"

      - name: Wait for npm propagation
        run: sleep 30

      - name: Verify version availability on npm with retries
        run: |
          echo "Checking if @bowtiedradone/dummy-test-pkg@$VERSION is available on npm..."
          for i in {1..5}; do
            if npm view @bowtiedradone/dummy-test-pkg@$VERSION version >/dev/null 2>&1; then
              echo "Package @bowtiedradone/dummy-test-pkg@$VERSION is available on npm"
              break
            else
              echo "Attempt $i: Package not yet available, waiting 10 seconds..."
              if [ $i -eq 5 ]; then
                echo "Package @bowtiedradone/dummy-test-pkg@$VERSION not found after 5 attempts"
                exit 1
              fi
              sleep 10
            fi
          done

      - name: Update example project to use published version
        run: |
          echo "Updating example project to use version: $VERSION"

          # Configure git.
          git config user.email "action@github.com"
          git config user.name "GitHub Action"

          # Create and checkout post-release branch.
          git checkout -b "$BRANCH_NAME"

          # Update example to use the published version.
          cd example
          npm install @bowtiedradone/dummy-test-pkg@$VERSION
          cd ..

          git add example/package.json example/package-lock.json
          git commit -m "Update example project to use @bowtiedradone/dummy-test-pkg@$VERSION"
          git push origin "$BRANCH_NAME"

      - name: Create pull request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.BRANCH_NAME }}
          title: "Update example project to use @bowtiedradone/dummy-test-pkg@${{ env.VERSION }}"
          body: |
            This post-release PR updates the `example` project to use the latest dummy test package version.

            **Changes:**
            - Updates `@bowtiedradone/dummy-test-pkg` dependency to `${{ env.VERSION }}`

            Auto-generated after test release ${{ env.VERSION }}.
          base: master
